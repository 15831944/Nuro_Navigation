/* DO NOT EDIT THIS FILE - it is machine generated */
#ifndef __NUROCORE_H__
#define __NUROCORE_H__

#include "NuroDefine.h"
#include <jni.h>
#include "MapInfo.h"
#include "NuroOpenedDefine.h"
#include "NURO_DEF.h"
typedef struct tagCOPYDATASTRUCT {
    nuDWORD dwData;
    nuDWORD cbData;
    nuPVOID lpData;
} COPYDATASTRUCT, *PCOPYDATASTRUCT;

/*
typedef struct tagOneKeyToNaviTmp
{
    nuDWORD latitude;
    nuDWORD longitude;
    nuBYTE  nDesNameLen;
    nuWCHAR wDesName[30];
}OneKeyToNaviTmp, *pOneKeyToNaviTmp;
*/
extern class CNuroCore *g_NuroCore;

class CNuroCore
{
public:
	CNuroCore(){ g_NuroCore = this; }
	virtual ~CNuroCore(){}

    virtual nuBOOL SetNuroPath(JNIEnv * env, jclass cls, jstring path) = 0;

	virtual nuBOOL SetNuroBuffer(JNIEnv * env, jclass cls, nuPVOID obj, nuINT nVal1, nuINT nVal2) = 0;
	virtual nuBOOL SetNuroPicBuffer(JNIEnv * env, jclass cls, nuPVOID obj, nuINT nVal1, nuINT nVal2) = 0;

	virtual nuBOOL SetNuroEventMap(JNIEnv * env, jclass cls, nuPVOID obj, nuINT nVal1) = 0;
	virtual nuBOOL InjectEventMap(JNIEnv * env, jclass cls, nuPVOID obj) = 0;
	virtual nuINT  GetFromEventMap(JNIEnv * env, jclass cls, nuPVOID obj) = 0;
	virtual nuVOID SetToEventMap(JNIEnv * env, jclass cls, nuPVOID obj, nuINT nVal) = 0;
	virtual nuCHAR * GetPreparedAudio(JNIEnv * env, jclass cls) = 0;
    virtual nuVOID SetPreparedAudio(JNIEnv * env, jclass cls) = 0;
	virtual nuINT  GetVolume(JNIEnv * env, jclass cls) = 0;
	virtual nuBOOL SetVolume(JNIEnv * env, jclass cls,jint ) = 0;
	virtual nuBOOL StartNuro(JNIEnv * env, jclass cls,nuPVOID SetHudDR,nuPVOID,nuPVOID,nuPVOID) = 0;
    virtual nuVOID StopNuro(JNIEnv * env, jclass cls) = 0;
	virtual nuBOOL OnMouseDown(JNIEnv * env, jclass cls, nuINT nVal1, nuINT nVal2) = 0;
	virtual nuBOOL OnMouseUp(JNIEnv * env, jclass cls, nuINT nVal1, nuINT nVal2) = 0;
	virtual nuBOOL OnMouseMove(JNIEnv * env, jclass cls, nuINT nVal1, nuINT nVal2) = 0;
	virtual nuBOOL onKeyDown(JNIEnv * env, jclass cls, nuINT nVal1) = 0;
	virtual nuBOOL onKeyUp(JNIEnv * env, jclass cls, nuINT nVal1) = 0;

	virtual nuBOOL SetGps(JNIEnv * env, jclass cls, nuPVOID obj) = 0;
	virtual nuBOOL SetGpsNema(JNIEnv * env, jclass cls, jstring GpsData,jboolean  bOK) = 0;
    virtual nuBOOL SendPoiStringUTF16BE(JNIEnv * env, jclass cls, jbyteArray buffer) = 0;
    virtual nuBOOL GetNuroState(JNIEnv * env, jclass cls) = 0;
    virtual nuBOOL GoPreDialog(JNIEnv * env, jclass cls) = 0;
    virtual nuBOOL WindowProc(nuUINT message, nuDWORD wparam, nuDWORD lparam) = 0;
	//virtual nuBOOL BackParser(JNIEnv * env, jclass cls, JNIEnv * env2,jclass m_c_Jni,jmethodID m_c_jni_mid) = 0;
 
    virtual void PickUpPhone() = 0;
    virtual void HangUpPhone() = 0;
    virtual void SendPostion(int lat, int lng, int direction, int speed) = 0;
    virtual void Dial(int nNo) = 0;
    virtual void Volume(int n) = 0;
   // virtual void vSendPhoneNum(PCopyDataPhoneNum pPhoneNum) = 0;
    virtual void DestCancel() = 0;	
//	virtual void CalTMCCarData(nuPVOID pData) = 0;
    #ifdef USE_HUD_DR_CALLBACK
	virtual nuUINT setHUDcall(nuVOID* pFun) = 0;
	virtual nuUINT setDRcall(nuVOID* pFun) = 0;
	#endif
	#ifdef ANDROID
	virtual nuUINT setSOUNDcall(nuVOID* pFun) = 0;
	#endif

     virtual nuBOOL PostMessage(JNIEnv * env, jclass cls,nuINT message,nuINT n1,nuINT n2) = 0;
     virtual nuBOOL SetKey(JNIEnv * env, jclass cls,nuINT message,jstring) = 0;

	virtual nuBOOL SEARCHSDKCallBack(PCALL_BACK_PARAM pParam) = 0;
	virtual nuBOOL GetNameALL(JNIEnv *env, jclass cls,jint nType, jobject object) = 0;
	virtual nuBOOL GetCandidateWord(JNIEnv *env, jclass cls,jint nType, jobject object) = 0;
	virtual nuBOOL GetKeyBoard(JNIEnv *env, jclass cls,jint nType, jobject object) = 0;
	virtual nuBOOL GetListWord(JNIEnv *env, jclass cls,jint nType, jobject object) = 0;

	virtual nuBOOL setSDKKEY(nuINT nMode,nuWCHAR *wsName) = 0;
//--------------for SDK---------------------------------------------//
	virtual nuLONG OnCopyData(COPYDATASTRUCT* pCopyDataStruct) = 0;
	virtual nuVOID MouseEvent(NURO_POINT2 Pt) = 0;
	virtual nuPVOID UIGetEngineData(nuLONG DataDef, nuPVOID pReturnData, nuPVOID pReturnData2) = 0;
//--------------for SDK---------------------------------------------//
};

#endif /* NuroCore.h */
